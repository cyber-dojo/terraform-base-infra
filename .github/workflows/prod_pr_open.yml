name: 'prod-pr-open'

on:
  pull_request:
    branches: [ prod ]

concurrency:
  group: ${{ github.workflow }} 

env:
  KOSLI_ORG:       ${{ vars.KOSLI_ORG }}               # cyber-dojo
  KOSLI_FLOW:      ${{ vars.KOSLI_FLOW }}
  KOSLI_TRAIL:     PR-${{ github.event.pull_request.number }}
  KOSLI_HOST:      ${{ vars.KOSLI_HOST }}              # https://app.kosli.com
  KOSLI_API_TOKEN: ${{ secrets.KOSLI_API_TOKEN }}
  KOSLI_DRY_RUN:   ${{ vars.KOSLI_DRY_RUN }}
  KOSLI_DEBUG:     ${{ vars.KOSLI_DEBUG }}             # true/false

jobs:
  begin-trail:
    runs-on: ubuntu-latest
    permissions:
          id-token: write
          contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Kosli cli
        uses: kosli-dev/setup-cli-action@v2
        with:
          version: ${{ vars.KOSLI_CLI_VERSION }}

      - name: Create Kosli flow for terraform-base-infra PRs
        run:
          kosli create flow ${{ env.KOSLI_FLOW }} 
            --template-file kosli-trail-template.yml 
            --description "Kosli flow to track terraform PRs for base infra"

      - name: Create Kosli trail for terraform-base-infra PRs
        run:
          kosli begin trail ${{ env.KOSLI_TRAIL }}
            --flow ${{ env.KOSLI_FLOW }} 
            --template-file kosli-trail-template.yml

      - name: Configure AWS credentials for terraform validation
        id: configure-aws-creds
        uses: aws-actions/configure-aws-credentials@v4.0.1
        with:
          role-to-assume: arn:aws:iam::274425519734:role/gh_base_infra
          aws-region: eu-central-1
          role-duration-seconds: 900
          role-session-name: ${{ github.event.repository.name }}
          mask-aws-account-id: 'no'

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: v1.4.5
          terraform_wrapper: false

      - name: Terraform init
        run: terraform init -backend=false

      - name: Terraform validate
        run: |
          terraform validate -json > validation_results.json
          echo "KOSLI_TF_VALIDATION_COMPLIANT=$(jq -r '.valid' ./validation_results.json)" >> ${GITHUB_ENV}

      - name: Attest terraform validation results to Kosli trail
        run:
          kosli attest generic
            --name tf-validation
            --flow ${{ env.KOSLI_FLOW }}
            --trail ${{ env.KOSLI_TRAIL }}
            --compliant=${{ env.KOSLI_TF_VALIDATION_COMPLIANT }}

      - name: Upload validation results as artifact
        uses: actions/upload-artifact@v4.0.0
        with:
          name: validation_results
          path: ./validation_results.json

  plan:
    permissions:
      id-token: write
      contents: write
    uses: fivexl/gh-workflow-tf-plan-apply/.github/workflows/base.yml@v0.0.26
    with:
      aws_region: eu-central-1
      aws_default_region: eu-central-1
      aws_role_arn: arn:aws:iam::274425519734:role/gh_base_infra
      aws_role_duration: 900
      working_directory: ./
      tf_version: v1.9.1
      tf_sh_version: 0.2.1
      tf_dont_fail_if_plan_not_empty: true
      tf_upload_artifact_plan: 'true'
      tf_upload_artifact_name_suffix: "_prod"

  trail-attest-tf-plan:
    needs: [  begin-trail, plan ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup kosli cli
        uses: kosli-dev/setup-cli-action@v2
        with:
          version: ${{ vars.KOSLI_CLI_VERSION }}

      - name: Download terraform plan created in the plan job
        uses: actions/download-artifact@v4.1.1
        with:
          name: tf_artifacts_plan_prod
      
      #- name: Attest tf plan to Kosli trail
      #  run:
      #    kosli attest generic
      #      --name tf-plan
      #      --flow ${{ env.KOSLI_FLOW }}
      #      --trail ${{ env.KOSLI_TRAIL }}

  # Cleanup workflow artifacts
  cleanup-workflow-artifacts:
    needs: [ trail-attest-tf-plan, trails-reporting-staging ]
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: read
    steps:
      - name: Delete terraform plan artifact
        run: |
          # Get the list of artifacts
          artifact_id=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository}}/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[] | select(.name == "tf_artifacts_plan_prod").id')

          # Delete each artifact
          curl -L \
            -X DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository}}/actions/artifacts/${artifact_id}
        
      - name: Delete validation_results artifact
        run: |
          # Get the list of artifacts
          artifact_id=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository}}/actions/runs/${{ github.run_id }}/artifacts | jq -r '.artifacts[] | select(.name == "validation_results").id')

          # Delete each artifact
          curl -L \
            -X DELETE \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/${{ github.repository}}/actions/artifacts/${artifact_id}

            # Attestations to Kosli staging server

  # Attestations to Kosli staging server
  trails-reporting-staging:
    needs: [ trail-attest-tf-plan ]
    name: Begin Kosli trail for kosli staging
    runs-on: ubuntu-latest
    permissions:
          id-token: write
          contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Kosli cli
        uses: kosli-dev/setup-cli-action@v2
        with:
          version: ${{ vars.KOSLI_CLI_VERSION }}

      - name: Create Kosli flow for terraform-base-infra PRs
        run:
          kosli create flow ${{ env.KOSLI_FLOW }} 
            --template-file kosli-trail-template.yml 
            --description "Kosli flow to track terraform PRs for base infra"

      - name: Create Kosli trail for terraform-base-infra PRs
        run:
          kosli begin trail ${{ env.KOSLI_TRAIL }}
            --flow ${{ env.KOSLI_FLOW }} 
            --template-file kosli-trail-template.yml

      - name: Download terraform plan created in the plan job
        uses: actions/download-artifact@v4.1.1
        with:
          name: validation_results

      # - name: Attest terraform validation results to Kosli trail
      #   run:
      #     kosli attest generic
      #       --name tf-validation
      #       --flow ${{ env.KOSLI_FLOW }}
      #       --trail ${{ env.KOSLI_TRAIL }}
      #       --compliant ${{ env.KOSLI_TF_VALIDATION_COMPLIANT }}

      - name: Download terraform plan created in the plan job
        uses: actions/download-artifact@v4.1.1
        with:
          name: tf_artifacts_plan_prod

      # - name: Attest tf plan to Kosli trail
      #   run:
      #     kosli attest generic
      #       --name tf-plan
      #       --flow ${{ env.KOSLI_FLOW }}
      #       --trail ${{ env.KOSLI_TRAIL }}
